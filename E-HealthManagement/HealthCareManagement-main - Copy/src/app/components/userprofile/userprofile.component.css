/* 
@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@600&display=swap');

.sidebar-text
  {
      font-size: small;
  }
  .sidebar-logo {
    padding: 10px 15px 10px 30px;
    font-size: 20px;
    text-align: right;
    background-color: #13534e;
    width: 100%;
  }
  .logoutbtn{
    border: none;
    background:transparent;
    color: white;
    border-radius: 15px;
    margin-left: 1px;
    margin-right: 1%;
    padding: 5px 10px 5px 10px;
    font-size: small;
  }
  .logoutbtn:hover{
    cursor: pointer;
    background-color: #23ad9b;
    padding: 5px 8px 5px 8px;
    border-radius: 15px;
  }
.container
{
    max-width: 600px;
    padding: 40px 40px 25px 40px;
    margin-top: 3%; 
    border-radius: 10px; 
    box-shadow: 5px 5px 35px 8px rgb(147, 158, 147); 
    background-color: white;
    margin-bottom: 5%;
}
input{
    border-radius: 12px;
    margin-top: 8px;
}
.textual
{
    color: rgb(64, 85, 15); 
    text-align: center; 
    margin-top: -20px;
    font-family: 'Oswald', sans-serif;
    padding: 5px;
    text-transform: uppercase;
}
label{
    margin-top: 8px;
    font-weight: bold;
    font-family: sans-serif;
    letter-spacing: 1px;
}
.registerbtn
{
    background-color: transparent;
    padding-left: 8%;
    padding-right: 8%;
    margin: auto;  
    padding-bottom: 7px;
    border-radius: 15px;
    margin-top: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    color: black;
    border: 1px solid black;
}
.registerbtn:hover
{
    background-color: rgb(23, 78, 78);
    padding-left: 7%;
    padding-right: 7%;
    cursor: pointer;
    color: white;
}

.row
  {
    margin-left: 30%;
    margin-top: 3%;
  }
  #bloodCards
  {
    margin-right: 5%;
    margin-bottom: 15%;
    width: 55%;
    border-radius: 10px;
    transition: transform .2s;
    padding-left: 2%;
    box-shadow: 5px 5px 25px 8px rgb(147, 158, 147);
  }
  #bloodCards:hover
  {
    transform: scale(1.05);
    cursor: pointer;
  }
.bloodimg
{
  float: right;
}
.card-block
{
  margin-top: 3%;
  margin-bottom: 3%;
}
.text{
  font-family: serif;
  font-size: larger;
  font-weight: bolder;
}
.editbtn
{
  border: none;
  border-radius: 15px;
  color: white;
  padding: 5px 20px 5px 20px;
  margin-top: 5%;
  margin-bottom: 1%;
  background-color: #13534e;
}
.editbtn:hover{
  cursor: pointer;
}

.btndiv{
  margin-left: 40%;
  align-content: center;
} */




@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@600&display=swap');

.custom-sidebar-text {
    font-size: small;
}

.custom-sidebar-logo {
    padding: 10px 15px 10px 30px;
    font-size: 20px;
    text-align: right;
    background-color: #13534e;
    width: 100%;
}

.custom-logout-btn {
    border: none;
    background: transparent;
    color: white;
    border-radius: 15px;
    margin-left: 1px;
    margin-right: 1%;
    padding: 5px 10px 5px 10px;
    font-size: small;
}

.custom-logout-btn:hover {
    cursor: pointer;
    background-color: #23ad9b;
    padding: 5px 8px 5px 8px;
    border-radius: 15px;
}

.custom-container {
    max-width: 600px;
    padding: 40px 40px 25px 40px;
    margin-top: 3%;
    border-radius: 10px;
    box-shadow: 5px 5px 35px 8px rgb(147, 158, 147);
    background-color: white;
    margin-bottom: 5%;
    margin-left:30%;
  
}

input {
    border-radius: 12px;
    margin-top: 8px;
}

.custom-textual {
    color: rgb(64, 85, 15);
    text-align: center;
    margin-top: -20px;
    font-family: 'Oswald', sans-serif;
    padding: 5px;
    text-transform: uppercase;
}

label {
    margin-top: 8px;
    font-weight: bold;
    font-family: sans-serif;
    letter-spacing: 1px;
}

.custom-register-btn {
    background-color: transparent;
    padding-left: 8%;
    padding-right: 8%;
    margin: auto;
    padding-bottom: 7px;
    border-radius: 15px;
    margin-top: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    color: black;
    border: 1px solid black;
}

.custom-register-btn:hover {
    background-color: rgb(23, 78, 78);
    padding-left: 7%;
    padding-right: 7%;
    cursor: pointer;
    color: white;
}

.custom-row {
    margin-left: 30%;
    margin-top: 3%;
    
}

#blood-cards {
    margin-right: 5%;
    margin-bottom: 15%;
    width: 55%;
    border-radius: 10px;
    transition: transform .2s;
    padding-left: 2%;
    box-shadow: 5px 5px 25px 8px rgb(147, 158, 147);
}

#blood-cards:hover {
    transform: scale(1.05);
    cursor: pointer;
}

.custom-blood-img {
    float: right;
}

.custom-card-block {
    margin-top: 3%;
    margin-bottom: 3%;
   padding: 30px;
}

.custom-text {
    font-family: serif;
    font-size: larger;
    font-weight: bolder;
}

.custom-edit-btn {
    border: none;
    border-radius: 15px;
    color: white;
    padding: 5px 20px 5px 20px;
    margin-top: 5%;
    margin-bottom: 1%;
    background-color: #13534e;
}

.custom-edit-btn:hover {
    cursor: pointer;
}

.btn-div {
    margin-left: 40%;
    align-content: center;
}





/* <!-- <app-header></app-header>

<div class="row" id="profilecard">
    <div *ngFor="let user of profileDetails | async" id="bloodCards">
        <a><img *ngIf="user.gender === 'Male' || user.gender === 'male'" class="bloodimg" [src]="'assets/img/maleuser.png'" width="120" height="120"></a>
        <a><img *ngIf="user.gender === 'Female' || user.gender === 'female'" class="bloodimg" [src]="'assets/img/femaleuser.png'" width="120" height="120"></a>
        <div class="card-block">
            <div class="text"><b style="color: navy;">User Name : </b><b class="element" style="margin-left: 53px;"> {{user.username}}</b> </div>
            <div class="text"><b style="color: navy;">Mobile Number : </b><b class="element" style="margin-left: 12px;"> {{user.mobile}}</b> </div>
            <div class="text"><b style="color: navy;">Gender : </b><b class="element" style="margin-left: 80px;"> {{user.gender}}</b> </div>
            <div class="text"><b style="color: navy;">Mail ID : </b><b class="element" style="margin-left: 78px;"> {{user.email}}</b> </div>
            <div class="text"><b style="color: navy;">Age : </b><b class="element" style="margin-left: 110px;"> {{user.age}} years</b> </div>
            <div class="btndiv" style="align-items: center;"><button class="editbtn" (click)="editProfile()"><i class="fa fa-edit"></i> edit</button></div>
            <small id="message" *ngIf="temp === true" style="text-align: center; margin-top: 3%; color: green;"><b>Profile Updated Successfully !!!</b></small> 
          </div>
    </div>
  </div>
  
    <div class="container" id="profileform">
      <h3 class="textual">Update User Profile</h3>
      <form #Updateform="ngForm" (ngSubmit)="updateUserProfile()">
        <small *ngIf="temp === false" style="text-align: center; color: navy;"><b>Dear {{loggedUser}}, update your profile here</b></small>
        <small *ngIf="temp === true" style="text-align: center; color: green;"><b>Profile Updated Successfully !!!</b></small>  
        <div class="form-group">
          <label for="email">Email : <b class="text-danger">*</b></label>
          <input type="email" class="form-control" id="email" value="user.email" placeholder="enter email" name="email" [(ngModel)]="user.email" required pattern="^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$"
          #email="ngModel"
          [class.is-invalid]="email.invalid && email.touched"
          >
        <div *ngIf="email.errors && (email.invalid && email.touched)">
          <small class="text-danger" *ngIf="email.errors.pattern"><b>Invalid email Id</b></small>
        </div>
        </div>
  
        <div class="form-group">
          <label for="username">UserName: <b class="text-danger">*</b></label>
          <input type="text" class="form-control" placeholder="enter username" value="user.username" name="username" required [(ngModel)]="user.username"
          #username="ngModel"
          [class.is-invalid]="username.invalid && username.touched">
        </div>
  
        <div class="form-group">
          <label for="gender">Gender: <b class="text-danger">*</b></label>
          <select class="form-control" id="sel1" value="user.gender" name="gender" [(ngModel)]="user.gender" required
              #gender="ngModel">
                  <option selected>Male</option>
                  <option>Female</option>
                  <option>Others</option>
              </select>
         </div>
  
        <div class="form-group">
          <label for="age">Age: <b class="text-danger">*</b></label>
          <input type="number" class="form-control" value="user.age" placeholder="enter your age" name="age" [(ngModel)]="user.age" required
          #age="ngModel"
          [class.is-invalid]="age.invalid && age.touched">
         <small class="text-danger" [class.d-none]="age.valid || age.untouched"><b>required field</b></small>
        </div>
  
        <div class="form-group">
          <label for="mobile">Mobile Number: <b class="text-danger">*</b></label>
          <input type="tel" class="form-control" placeholder="enter mobile number" value="user.mobile" name="mobile" [(ngModel)]="user.mobile" required
          #mobile="ngModel"
          [class.is-invalid]="mobile.invalid && mobile.touched">
         </div>
  
        <div class="form-group">
          <label for="pwd">Password: <b class="text-danger">*</b></label>
          <input type="password" class="form-control" placeholder="enter password" value="user.password" name="pwd" [(ngModel)]="user.password" required
          #password="ngModel"
          [class.is-invalid]="password.invalid && password.touched"> 
        </div>
  
        <button [disabled]="Updateform.form.invalid" type="submit" class="btn registerbtn">Update</button>
      </form>
    </div>
  
  <app-footer></app-footer> --> */

